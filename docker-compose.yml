services:
  nginx:
    image: nginx:latest
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    depends_on:
      - api
      - frontend
    restart: unless-stopped

    certbot:
      image: certbot/certbot
      volumes:
        - ./certbot/conf:/etc/letsencrypt
        - ./certbot/www:/var/www/certbot
      entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

  api:
    build:
      context: ./back/autoria-api
      dockerfile: Dockerfile
    expose:
      - ":80"
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ConnectionStrings__DefaultConnection=Data Source=/app/DBautoria.db
    volumes:
      - ./back/autoria-api/autoria-api/DBautoria.db:/app/DBautoria.db
      - ./back/autoria-api/autoria-api/Images:/app/Images

  frontend:
    build:
      context: ./front/autoria
      dockerfile: Dockerfile
    expose:
      - "80"
    environment:
      - NODE_ENV=production
    restart: unless-stopped
    depends_on:
      - api

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
#      - ./data/prometheus/data:/prometheus
    ports:
      - "9090:9090" # Prometheus web interface
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
#      - '-storage.local.path=/prometheus'
    restart: unless-stopped
    depends_on:
      - cadvisor
      - node-exporter

  # Node Exporter (для моніторингу хосту)
  node-exporter:
    image: prom/node-exporter:latest
    container_name: node-exporter
    ports:
      - "9100:9100"
    restart: unless-stopped

  # Docker Advisor (контейнер для збору метрик Docker)
  cadvisor:
    image: gcr.io/cadvisor/cadvisor
    container_name: cadvisor
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    ports:
      - "8080:8080" # cAdvisor web interface
    restart: unless-stopped

   # Grafana (для візуалізації метрик)
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000" # Grafana web interface
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin1234 # Заміни на сильніший пароль
    volumes:
      - grafana-data:/var/lib/grafana
    depends_on:
      - prometheus
    restart: unless-stopped

volumes:
  grafana-data:
