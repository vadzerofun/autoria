import { useEffect, useState } from 'react';

export const UserIcon = ({ color, hoverColor, size }) => {
  const defaultWidth = 16;
  const defaultHeight = 17;

  const [width, setWidth] = useState(null);
  const [height, setHeight] = useState(null);

  useEffect(() => {
    setWidth(size);
    setHeight(Math.round(((size * defaultHeight) / defaultWidth) * 100) / 100);
  }, [width, height]);

  // console.log(height);

  return (
    <>
      <svg
        className={hoverColor && "userIcon"}
        width={width && !isNaN(width) ? width : defaultWidth}
        height={height && !isNaN(height) ? height : defaultHeight}
        viewBox="0 0 16 17"
        fill="none"
        xmlns="http://www.w3.org/2000/svg">
        <mask id="path-1-inside-1_615_127" fill="white">
          <path d="M8.11191 0.500743C3.61288 0.43998 -0.0600231 4.11271 0.000743316 8.61152C0.0607406 12.9261 3.57404 16.4392 7.88884 16.4992C12.3886 16.5608 16.0608 12.888 15.9992 8.38923C15.94 4.07387 12.4267 0.560738 8.11191 0.500743ZM12.974 13.0861C12.9587 13.1027 12.9399 13.1157 12.919 13.1242C12.8981 13.1327 12.8756 13.1365 12.853 13.1353C12.8305 13.1341 12.8085 13.128 12.7886 13.1174C12.7687 13.1067 12.7514 13.0919 12.7379 13.0738C12.3938 12.6238 11.9726 12.2384 11.4937 11.9358C10.5145 11.3074 9.27378 10.9613 8.00038 10.9613C6.72697 10.9613 5.48626 11.3074 4.50707 11.9358C4.02818 12.2383 3.6069 12.6235 3.2629 13.0734C3.24939 13.0915 3.23206 13.1064 3.21215 13.117C3.19225 13.1276 3.17025 13.1337 3.14771 13.1349C3.12518 13.1361 3.10266 13.1323 3.08176 13.1238C3.06086 13.1153 3.04208 13.1023 3.02676 13.0857C1.89822 11.8675 1.25895 10.2757 1.23146 8.61537C1.16877 4.87302 4.23978 1.74063 7.98384 1.7314C11.7279 1.72217 14.7693 4.76227 14.7693 8.49999C14.7706 10.2004 14.1293 11.8385 12.974 13.0861Z" />
        </mask>
        <path
          className={hoverColor && "userIconFill"}
          d="M8.11191 0.500743L8.12581 -0.49916L8.12541 -0.499166L8.11191 0.500743ZM0.000743316 8.61152L-0.999166 8.62502L-0.99916 8.62542L0.000743316 8.61152ZM7.88884 16.4992L7.87494 17.4991L7.87517 17.4991L7.88884 16.4992ZM15.9992 8.38923L16.9991 8.37556V8.37551L15.9992 8.38923ZM12.974 13.0861L12.2403 12.4067L12.2398 12.4071L12.974 13.0861ZM12.7379 13.0738L13.5387 12.4748L13.5323 12.4665L12.7379 13.0738ZM11.4937 11.9358L10.9536 12.7774L10.9595 12.7812L11.4937 11.9358ZM4.50707 11.9358L5.04105 12.7814L5.04718 12.7774L4.50707 11.9358ZM3.2629 13.0734L2.46842 12.466L2.46212 12.4745L3.2629 13.0734ZM3.02676 13.0857L3.76094 12.4068L3.76035 12.4061L3.02676 13.0857ZM1.23146 8.61537L2.23132 8.59881L2.23132 8.59862L1.23146 8.61537ZM14.7693 8.49999H13.7693V8.50075L14.7693 8.49999ZM8.12541 -0.499166C3.06363 -0.56753 -1.06753 3.56336 -0.999165 8.62502L1.00065 8.59801C0.947488 4.66206 4.16214 1.44749 8.0984 1.50065L8.12541 -0.499166ZM-0.99916 8.62542C-0.931634 13.4815 3.01878 17.4316 7.87494 17.4991L7.90275 15.4993C4.1293 15.4469 1.05311 12.3708 1.00065 8.59761L-0.99916 8.62542ZM7.87517 17.4991C12.9379 17.5684 17.0684 13.4373 16.9991 8.37556L14.9993 8.40291C15.0532 12.3388 11.8394 15.5532 7.90252 15.4993L7.87517 17.4991ZM16.9991 8.37551C16.9325 3.51858 12.982 -0.431638 8.12581 -0.49916L8.09801 1.50065C11.8714 1.55311 14.9475 4.62915 14.9993 8.40296L16.9991 8.37551ZM12.2398 12.4071C12.3241 12.316 12.4273 12.2446 12.5423 12.1978L13.2957 14.0505C13.4525 13.9868 13.5933 13.8893 13.7082 13.765L12.2398 12.4071ZM12.5423 12.1978C12.6573 12.1511 12.7812 12.1302 12.9051 12.1366L12.801 14.1339C12.97 14.1427 13.1389 14.1143 13.2957 14.0505L12.5423 12.1978ZM12.9051 12.1366C13.029 12.1431 13.15 12.1767 13.2595 12.2352L12.3177 13.9995C12.467 14.0792 12.632 14.1251 12.801 14.1339L12.9051 12.1366ZM13.2595 12.2352C13.369 12.2936 13.4643 12.3755 13.5386 12.4748L11.9371 13.6727C12.0384 13.8083 12.1684 13.9198 12.3177 13.9995L13.2595 12.2352ZM13.5323 12.4665C13.1163 11.9223 12.6069 11.4564 12.0279 11.0905L10.9595 12.7812C11.3382 13.0205 11.6713 13.3252 11.9434 13.6811L13.5323 12.4665ZM12.0338 11.0942C10.8783 10.3527 9.44647 9.9613 8.00038 9.9613V11.9613C9.10108 11.9613 10.1507 12.2621 10.9536 12.7774L12.0338 11.0942ZM8.00038 9.9613C6.55428 9.9613 5.12243 10.3527 3.96697 11.0942L5.04718 12.7774C5.85009 12.2621 6.89967 11.9613 8.00038 11.9613V9.9613ZM3.97311 11.0903C3.39396 11.4561 2.88448 11.9219 2.46847 12.4661L4.05733 13.6808C4.32931 13.325 4.6624 13.0205 5.04104 12.7813L3.97311 11.0903ZM2.46212 12.4745C2.53646 12.3751 2.63176 12.2932 2.74124 12.2348L3.68307 13.9992C3.83237 13.9195 3.96231 13.8079 4.06369 13.6724L2.46212 12.4745ZM2.74124 12.2348C2.85073 12.1764 2.97173 12.1427 3.09567 12.1363L3.19976 14.1335C3.36876 14.1247 3.53377 14.0789 3.68307 13.9992L2.74124 12.2348ZM3.09567 12.1363C3.21962 12.1298 3.34347 12.1507 3.45842 12.1974L2.70509 14.0501C2.86186 14.1139 3.03073 14.1423 3.19976 14.1335L3.09567 12.1363ZM3.45842 12.1974C3.57341 12.2442 3.67669 12.3157 3.76094 12.4068L2.29257 13.7647C2.40747 13.8889 2.5483 13.9864 2.70509 14.0501L3.45842 12.1974ZM3.76035 12.4061C2.79919 11.3686 2.25474 10.0129 2.23132 8.59881L0.231593 8.63192C0.263168 10.5385 0.997257 12.3664 2.29317 13.7653L3.76035 12.4061ZM2.23132 8.59862C2.17797 5.41384 4.80034 2.73925 7.9863 2.73139L7.98137 0.7314C3.67922 0.742005 0.159567 4.33221 0.231596 8.63211L2.23132 8.59862ZM7.9863 2.73139C11.1765 2.72353 13.7693 5.31493 13.7693 8.49999H15.7693C15.7693 4.2096 12.2793 0.720805 7.98137 0.7314L7.9863 2.73139ZM13.7693 8.50075C13.7704 9.94893 13.2243 11.3441 12.2403 12.4067L13.7077 13.7655C15.0344 12.3329 15.7708 10.4518 15.7693 8.49923L13.7693 8.50075Z"
          fill={color}
          mask="url(#path-1-inside-1_615_127)"
        />
        <path
          className={hoverColor && "userIconStroke"}
          d="M8.21013 4.79028C7.55884 4.79028 6.99013 5.03265 6.59146 5.45524C6.1951 5.87538 5.98579 6.46738 6.03289 7.12569C6.1326 8.47167 7.16551 9.47449 8.21013 9.47449C9.25431 9.47449 10.2857 8.47201 10.3875 7.12501C10.436 6.47746 10.2307 5.89156 9.82425 5.45975L8.21013 4.79028ZM8.21013 4.79028C8.85421 4.79028 9.42226 5.03318 9.82412 5.45961L8.21013 4.79028Z"
          stroke={color}
        />
      </svg>
      
      {hoverColor && (
        <style>
          {`
          .userIconFill,
          .userIconStroke {
            transition: all 0.15s ease-in-out;  
          }
          .userIcon:hover .userIconFill {
            fill: ${hoverColor};
          }
          .userIcon:hover .userIconStroke {
            stroke: ${hoverColor};
          }   
        `}
        </style>
      )}
    </>
  );
};
